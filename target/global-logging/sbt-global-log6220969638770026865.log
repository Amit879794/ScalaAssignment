[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\amitkumar376\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\amitkumar376\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Amazon.com Inc. Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 98.2996ms
[debug]       Load.loadUnit: defsScala took 0.3591ms
[debug] [Loading] Scanning directory C:\Users\amitkumar376\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\amitkumar376\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.723 ms
[debug]           Load.resolveProject(global-plugins) took 64.4572ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\amitkumar376\.sbt\1.0\plugins, plugins: List(<none>))) took 131.3806ms
[debug] [Loading] Done in C:\Users\amitkumar376\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 155.2278ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4962ms
[debug]     Load.loadUnit(file:/C:/Users/amitkumar376/.sbt/1.0/plugins/, ...) took 265.3309ms
[debug]   Load.apply: load took 474.3197ms
[debug]   Load.apply: resolveProjects took 12.1644ms
[debug]   Load.apply: finalTransforms took 73.9669ms
[debug]   Load.apply: config.delegates took 13.6248ms
[debug]   Load.apply: Def.make(settings)... took 1092.5916ms
[debug]   Load.apply: structureIndex took 117.9558ms
[debug]   Load.apply: mkStreams took 2.5717ms
[info] loading global plugins from C:\Users\amitkumar376\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3517.7208ms
[debug]           Load.loadUnit: plugins took 30.4475ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\amitkumar376\IdeaProjects\AssignementScala\project
[debug]             Load.loadUnit: mkEval took 7.8245ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\amitkumar376\IdeaProjects\AssignementScala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2916 ms
[info] loading settings for project assignementscala-build from idea1.sbt ...
[debug]               Load.resolveProject(assignementscala-build) took 4.496ms
[debug]             Load.loadTransitive: finalizeProject(Project(id assignementscala-build, base: C:\Users\amitkumar376\IdeaProjects\AssignementScala\project, plugins: List(<none>))) took 8.5967ms
[debug] [Loading] Done in C:\Users\amitkumar376\IdeaProjects\AssignementScala\project, returning: (assignementscala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 158.7606ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.0715ms
[debug]         Load.loadUnit(file:/C:/Users/amitkumar376/IdeaProjects/AssignementScala/project/, ...) took 196.9285ms
[debug]       Load.apply: load took 199.3123ms
[debug]       Load.apply: resolveProjects took 0.1552ms
[debug]       Load.apply: finalTransforms took 8.2698ms
[debug]       Load.apply: config.delegates took 0.4967ms
[debug]       Load.apply: Def.make(settings)... took 103.4217ms
[debug]       Load.apply: structureIndex took 27.0419ms
[debug]       Load.apply: mkStreams took 0.0054ms
[info] loading project definition from C:\Users\amitkumar376\IdeaProjects\AssignementScala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1765.167ms
[debug]     Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory C:\Users\amitkumar376\IdeaProjects\AssignementScala
[debug]       Load.loadUnit: mkEval took 0.4325ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\amitkumar376\IdeaProjects\AssignementScala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.218 ms
[info] loading settings for project assignementscala from build.sbt ...
[debug]         Load.resolveProject(assignementscala) took 26.5402ms
[debug]       Load.loadTransitive: finalizeProject(Project(id assignementscala, base: C:\Users\amitkumar376\IdeaProjects\AssignementScala, plugins: List(<none>))) took 30.0174ms
[debug] [Loading] Done in C:\Users\amitkumar376\IdeaProjects\AssignementScala, returning: (assignementscala)
[debug]     Load.loadUnit: loadedProjectsRaw took 2711.0956ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.9413ms
[debug]   Load.loadUnit(file:/C:/Users/amitkumar376/IdeaProjects/AssignementScala/, ...) took 4496.1755ms
[debug] Load.apply: load took 4497.8775ms
[debug] Load.apply: resolveProjects took 0.1162ms
[debug] Load.apply: finalTransforms took 22.0554ms
[debug] Load.apply: config.delegates took 0.3798ms
[debug] Load.apply: Def.make(settings)... took 67.1773ms
[debug] Load.apply: structureIndex took 21.2113ms
[debug] Load.apply: mkStreams took 0.0061ms
[info] set current project to AssignementScala (in build file:/C:/Users/amitkumar376/IdeaProjects/AssignementScala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55338 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55338, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to AssignementScala (in build file:/C:/Users/amitkumar376/IdeaProjects/AssignementScala/)
[debug] > Exec(idea-shell, None, None)
